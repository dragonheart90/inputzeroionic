{"version":3,"sources":["webpack:///src/app/assesment/assesment.page.html","webpack:///src/app/assesment/assesment-routing.module.ts","webpack:///src/app/assesment/assesment.module.ts","webpack:///src/app/assesment/assesment.page.scss","webpack:///src/app/assesment/assesment.page.ts"],"names":["routes","path","component","AssesmentPageRoutingModule","imports","forChild","exports","AssesmentPageModule","declarations","AssesmentPage","modalController","httpa","http","loadingController","rest","storage","data","baseurl","apiURLs","console","log","getdata","create","message","duration","loading","present","setDataSerializer","get","then","response","data2","JSON","parse","rows","modal","onWillDismiss","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,0BAA0B;AAAA;AAAA,KAAvC;;AAAaA,8BAA0B,6DAJtC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,mBAAmB;AAAA;AAAA,KAAhC;;AAAaA,uBAAmB,6DAT/B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,oFAJO,CADD;AAORI,kBAAY,EAAE,CAAC,6DAAD;AAPN,KAAT,CAS+B,GAAnBD,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAaE,aAAa;AAMxB,6BAAmBC,eAAnB,EAA4DC,KAA5D,EAAiFC,IAAjF,EAA0GC,iBAA1G,EAAsJC,IAAtJ,EAAgLC,OAAhL,EAAkM;AAAA;;AAA/K,aAAAL,eAAA,GAAAA,eAAA;AAAyC,aAAAC,KAAA,GAAAA,KAAA;AAAqB,aAAAC,IAAA,GAAAA,IAAA;AAAyB,aAAAC,iBAAA,GAAAA,iBAAA;AAA4C,aAAAC,IAAA,GAAAA,IAAA;AAA0B,aAAAC,OAAA,GAAAA,OAAA;AAFhL,aAAAC,IAAA,GAAY,EAAZ;AAIA,aAAKC,OAAL,GAAeH,IAAI,CAACI,OAApB;AACAC,eAAO,CAACC,GAAR,CAAY,KAAKH,OAAjB;AACE,aAAKI,OAAL,GAJgM,CAKpM;AACA;AACC;;AAbyB;AAAA;AAAA,mCAeb,CACV;AAhBuB;AAAA;AAAA,kCAkBR;;;;;;;;;;AAEE,2BAAM,KAAKR,iBAAL,CAAuBS,MAAvB,CAA8B;AAClDC,6BAAO,EAAE,+CADyC;AAElDC,8BAAQ,EAAE;AAFwC,qBAA9B,CAAN;;;AAAVC,2B;;AAIN,2BAAMA,OAAO,CAACC,OAAR,EAAN;;;AACA,yBAAKf,KAAL,CAAWgB,iBAAX,CAA6B,MAA7B,E,CACA;;AACA,yBAAKhB,KAAL,CAAWiB,GAAX,CAAe,KAAKX,OAAL,GAAe,cAA9B,EAA8C,EAA9C,EAAmD;AAAC,sCAAgB;AAAjB,qBAAnD,EACCY,IADD,CACM,UAAAC,QAAQ,EAAI;AACjBX,6BAAO,CAACC,GAAR,CAAYU,QAAQ,CAACd,IAArB;AACA,2BAAI,CAACe,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACd,IAApB,CAAb;AACAG,6BAAO,CAACC,GAAR,CAAY,KAAI,CAACW,KAAjB;AACA,2BAAI,CAACG,IAAL,GAAU,KAAI,CAACH,KAAf;AACA,qBAND;;;;;;;;;AAOD;AAlCuB;AAAA;AAAA,mCAoCP;;;;;;;;AACfZ,2BAAO,CAACC,GAAR,CAAY,UAAZ;;AACc,2BAAM,KAAKV,eAAL,CAAqBY,MAArB,CAA4B;AAC9CpB,+BAAS,EAAE;AADmC,qBAA5B,CAAN;;;AAARiC,yB;;AAGN,2BAAMA,KAAK,CAACT,OAAN,EAAN;;;;AACiB,2BAAMS,KAAK,CAACC,aAAN,EAAN;;;;AAATpB,wB,yBAAAA,I;AACRG,2BAAO,CAACC,GAAR,CAAYJ,IAAZ;;;;;;;;;AACD;AA5CuB;;AAAA;AAAA,OAA1B;;;;cAMsC;;cAA+B;;cAAoB;;cAAsC;;cAA+B;;cAA6B;;;;AAN9KP,iBAAa,6DALzB,gEAAU;AACT4B,cAAQ,EAAE,eADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,KAAV,CAKyB,GAAb7B,aAAa,CAAb","file":"assesment-assesment-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Assesment</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card *ngFor=\\\"let category of rows\\\">\\n    <!-- <ion-card-header>\\n      <img src=\\\"{{category.avatar}}\\\"/>\\n    </ion-card-header> -->\\n    <ion-card-content>\\n    <ion-item> \\n      <span style=\\\"float: right;\\\"><ion-label style=\\\"float: right;\\\">Name: {{category.name}}<br>Email id: {{category.email}}\\n      <br>Phone: {{category.phone}}\\n      <br>city: {{category.city}}\\n      </ion-label></span>\\n      <!-- <ion-button fill=\\\"outline\\\" slot=\\\"end\\\">View</ion-button> -->\\n    </ion-item>\\n    </ion-card-content>\\n    </ion-card>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" (click)=\\\"addusers()\\\">\\n    <ion-fab-button color=\\\"primary\\\">\\n      <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AssesmentPage } from './assesment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssesmentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssesmentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AssesmentPageRoutingModule } from './assesment-routing.module';\n\nimport { AssesmentPage } from './assesment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AssesmentPageRoutingModule\n  ],\n  declarations: [AssesmentPage]\n})\nexport class AssesmentPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2VzbWVudC9hc3Nlc21lbnQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController, LoadingController } from '@ionic/angular';\nimport { AddusersPage } from '../addusers/addusers.page'\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { RestService } from '../rest.service';\nimport { async } from 'rxjs/internal/scheduler/async';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-assesment',\n  templateUrl: './assesment.page.html',\n  styleUrls: ['./assesment.page.scss'],\n})\nexport class AssesmentPage implements OnInit {\nrows : any;\n  baseurl: any;\n  data2: any;\n  data: any = {};\n  limit:any;\n  constructor(public modalController: ModalController,private httpa: HTTP, private http: HttpClient, public loadingController: LoadingController,public rest: RestService,private storage: Storage) \n{   \n  this.baseurl = rest.apiURLs;\n  console.log(this.baseurl)\n    this.getdata();\n// Define the columns for the data table\n// (based off the names of the keys in the JSON file)   \n}\n\n  ngOnInit() {\n  }\n\n  async getdata() {\n\n    const loading = await this.loadingController.create({\n      message: ' Please Wait we are Loading Users Information',\n      duration: 2000\n    });\n    await loading.present();\n    this.httpa.setDataSerializer('json');\n    // tslint:disable-next-line:max-line-length\n    this.httpa.get(this.baseurl + 'getusers.php', { }, {'Content-Type': 'application/json'})\n    .then(response => {\n     console.log(response.data);\n     this.data2 = JSON.parse(response.data);\n     console.log(this.data2);\n     this.rows=this.data2\n    });\n  }\n\n  async addusers() {\n    console.log('addusers');\n    const modal = await this.modalController.create({\n      component: AddusersPage\n    });\n    await modal.present();\n    const { data } = await modal.onWillDismiss();\n    console.log(data);\n  }\n\n}\n"]}